<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>initGlobals();
map = Map(16, 16);
MapGenerateOpenCave(map);
MapSetTileFlags(map);
MapPlaceTiles(map);

player_list = ds_list_create();
player = Player();
ds_list_add(player_list, player);

view_list = ds_list_create();

show_debug_message("placing player");
var i, j;
do{
    i = irandom_range(1, map.width-2);
    j = irandom_range(1, map.height-2);
}until(MapPositionEmpty(map, i, j));
console_values(i, j);
MapAddActor(map, player, i, j);

repeat(8) {
    show_debug_message("Placing enemy");
    do{
        i = irandom_range(1, map.width-2);
        j = irandom_range(1, map.height-2);
        console_values(i, j);
    }until(MapPositionEmpty(map, i, j));
    var enemy = Enemy();
    MapAddActor(map, enemy, i, j);
}
repeat(8) {
    show_debug_message("Placing ally");
    do{
        i = irandom_range(1, map.width-2);
        j = irandom_range(1, map.height-2);
        console_values(i, j);
    }until(MapPositionEmpty(map, i, j));
    var ally = Player();
    MapAddActor(map, ally, i, j);
}

state = GameState.TURN_START;
animation = false;
shadow = NULL;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Execute state

if (animation) exit;

if (state == GameState.TURN_START) {
    MapSetFOV(map, player);
    shadow = MapDrawShadow(map, shadow);
    MapSetMovementArea(map, player);
    MapHighlightMovementArea(map);
    state = GameState.PLAYER_TURN;
}

if (state == GameState.PLAYER_TURN) {
    if (mouse_check_button_pressed(mb_left)) {
        var i = mouse_x div TILE_SIZE;
        var j = mouse_y div TILE_SIZE;
        if (withinBounds(i, j, 0, 0, map.width, map.height)) {
            var path = MapGetMovementAreaPathTo(map, i, j);
            if (path != NULL) {
                ActorSetPath(player, path);
                alarm[0] = ActorAnimatePath(player);
                MapMoveActor(map, player, i, j);
                MapClearMovementArea(map);
                animation = true;
                state = GameState.TURN_START;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scaleView(1.05);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scaleView(1/1.05);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(shadow)) {
    shadow = MapDrawShadow(map, shadow);
}
draw_surface_ext(shadow, 0, 0, TILE_SIZE, TILE_SIZE, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
